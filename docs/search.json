[
  {
    "objectID": "index.html#how-to-use-this-book",
    "href": "index.html#how-to-use-this-book",
    "title": "Introduction to Statistical Computing",
    "section": "How to Use This Book",
    "text": "I’ve made an effort to use some specific formatting and enable certain features that make this book a useful tool for this class.\nSpecial Sections\nWatch Out\nWatch out sections contain things you may want to look out for - common errors, etc.\n \nExamples\nExample sections contain code and other information. Don’t skip them!\n \nMy Opinion\nThese sections contain things you should definitely not consider as fact and should just take with a grain of salt.\n \nGo Read\nSometimes, there are better resources out there than something I could write myself. When you see this section, go read the enclosed link as if it were part of the book.\n \nTry It Out\nTry it out sections contain activities you should do to reinforce the things you’ve just read.\n \nLearn More\nLearn More sections contain other references that may be useful on a specific topic. Suggestions are welcome (email me to suggest a new reference that I should add), as there’s no way for one person to catalog all of the helpful programming resources on the internet!\n \nNote\nNote sections contain clarification points (anywhere I would normally say “note that ….)\nExpandable Sections\n\nThese are expandable sections, with additional information when you click on the line\n\nThis additional information may be information that is helpful but not essential, or it may be that an example just takes a LOT of space and I want to make sure you can skim the book without having to scroll through a ton of output.\n \n\nMany times, examples will be in expandable sections\n\nThis keeps the code and output from obscuring the actual information in the textbook that I want you to retain. You can always look up the syntax, but you do need to absorb the details I’ve written out."
  },
  {
    "objectID": "index.html#about-this-book",
    "href": "index.html#about-this-book",
    "title": "Introduction to Statistical Computing",
    "section": "About This Book",
    "text": "This is a Quarto book. To learn more about Quarto books visit https://quarto.org/docs/books.\nI have written this entire book using reproducible techniques, with R and python code and results included within the book’s text.\nStat 151 will be offered for the first time in Spring 2022, as I’m writing this in Fall 2021. Initially, my goal is to write the book in R and include python as an additional option/example. Eventually, I hope to teach Stat 151 in R and Python at the same time."
  },
  {
    "objectID": "getting-started.html",
    "href": "getting-started.html",
    "title": "(PART) Fundamentals",
    "section": "",
    "text": "Getting Started"
  },
  {
    "objectID": "basic-math-operations.html",
    "href": "basic-math-operations.html",
    "title": "3  Using R and Python as Calculators",
    "section": "",
    "text": ""
  },
  {
    "objectID": "data-types.html",
    "href": "data-types.html",
    "title": "4  Basic Data Types",
    "section": "",
    "text": "integer/numeric/string/double/etc."
  },
  {
    "objectID": "vectors.html",
    "href": "vectors.html",
    "title": "5  Vectors, Arrays, Indexing, and Loops",
    "section": "",
    "text": "Vectors, Matrices, and Numpy arrays. Logical indexing. For loops.\n(probably 2 weeks of content)"
  },
  {
    "objectID": "data-structures.html",
    "href": "data-structures.html",
    "title": "6  Data Structures",
    "section": "",
    "text": "data frames in R and Pandas"
  },
  {
    "objectID": "reading-data.html",
    "href": "reading-data.html",
    "title": "7  Reading in Data",
    "section": "",
    "text": "External data files - csv, excel, etc."
  },
  {
    "objectID": "functions.html",
    "href": "functions.html",
    "title": "Introduction to Statistical Computing",
    "section": "",
    "text": ""
  },
  {
    "objectID": "statistics.html",
    "href": "statistics.html",
    "title": "Introduction to Statistical Computing",
    "section": "",
    "text": ""
  },
  {
    "objectID": "ttests.html",
    "href": "ttests.html",
    "title": "Introduction to Statistical Computing",
    "section": "",
    "text": ""
  },
  {
    "objectID": "linear-modeling.html",
    "href": "linear-modeling.html",
    "title": "Introduction to Statistical Computing",
    "section": "",
    "text": ""
  },
  {
    "objectID": "git-github.html",
    "href": "git-github.html",
    "title": "Introduction to Statistical Computing",
    "section": "",
    "text": ""
  },
  {
    "objectID": "markdown.html",
    "href": "markdown.html",
    "title": "2  Markdown, Notebooks, and Dynamic Documents",
    "section": "",
    "text": "In this class, we’ll be using markdown notebooks to keep our code and notes in the same place. One of the advantages of both R and Python is that they are both scripting languages, but they can be used within notebooks as well. This means that you can have an R script file or a python script file, and you can run that file, but you can also create a document (like the one you’re reading now) that has code AND text together in one place.\nNotes:\nShow code R file, code python file, R notebook file, and jupyter notebook file that do similar things. Then show a quarto notebook file that runs the R and python chunks together in a single document."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": ""
  },
  {
    "objectID": "getting-started.html#getting-started-objectives",
    "href": "getting-started.html#getting-started-objectives",
    "title": "\n1  Getting Started\n",
    "section": "Objectives",
    "text": "Understand the basics of how computers work\nUnderstand the file system mental model for computers\nSet up RStudio, R, Quarto, and python\nBe able to run demo code in R and python"
  },
  {
    "objectID": "getting-started.html#computer-basics",
    "href": "getting-started.html#computer-basics",
    "title": "\n1  Getting Started\n",
    "section": "\n1.1 Computer Basics",
    "text": "It is helpful when teaching a topic as technical as programming to ensure that everyone starts from the same basic foundational understanding and mental model of how things work. When teaching geology, for instance, the instructor should probably make sure that everyone understands that the earth is a round ball and not a flat plate – it will save everyone some time later.\nWe all use computers daily - we carry them around with us on our wrists, in our pockets, and in our backpacks. This is no guarantee, however, that we understand how they work or what makes them go.\n\n1.1.1 Hardware\nHere is a short 3-minute video on the basic hardware that makes up your computer. It is focused on desktops, but the same components (with the exception of the optical drive) are commonly found in cell phones, smart watches, and laptops.\n\n\n\n\nWhen programming, it is usually helpful to understand the distinction between RAM and disk storage (hard drives). We also need to know at least a little bit about processors (so that we know when we’ve asked our processor to do too much). Most of the other details aren’t necessary (for now).\n\n1.1.2 Operating Systems\nOperating systems, such as Windows, MacOS, or Linux, are a sophisticated program that allows CPUs to keep track of multiple programs and tasks and execute them at the same time.\n\n\n\n\n\n1.1.3 File Systems\nEvidently, there has been a bit of generational shift as computers have evolved: the “file system” metaphor itself is outdated because no one uses physical files anymore. This article is an interesting discussion of the problem: it makes the argument that with modern search capabilities, most people use their computers as a laundry hamper instead of as a nice, organized filing cabinet.\nRegardless of how you tend to organize your personal files, it is probably helpful to understand the basics of what is meant by a computer file system – a way to organize data stored on a hard drive. Since data is always stored as 0’s and 1’s, it’s important to have some way to figure out what type of data is stored in a specific location, and how to interpret it.\n\n\n\n\nThat’s not enough, though - we also need to know how computers remember the location of what is stored where. Specifically, we need to understand file paths.\n\n\n\n\nWhen you write a program, you may have to reference external files - data stored in a .csv file, for instance, or a picture. Best practice is to create a file structure that contains everything you need to run your entire project in a single file folder (you can, and sometimes should, have sub-folders).\nFor now, it is enough to know how to find files using file paths, and how to refer to a file using a relative file path from your base folder. In this situation, your “base folder” is known as your working directory - the place your program thinks of as home."
  },
  {
    "objectID": "getting-started.html#r",
    "href": "getting-started.html#r",
    "title": "\n1  Getting Started\n",
    "section": "\n2.1 R",
    "text": "First off, let’s install R.\n\nDownload the R installer for your operating system from CRAN:\n::: {.cell-output-display}  :::\n\n: https://cran.rstudio.com/bin/windows/base/\n::: {.cell-output-display}  :::\n: https://cran.rstudio.com/bin/macosx/"
  }
]